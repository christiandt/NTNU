<exercise
	title="Abstract classes and observer pattern" 
	compulsory="no" 
	deadline="06.04.2011">

	<objectives>
		<obj>Learn about abstract classes</obj>
		<obj>Learn to utilize the observer pattern</obj>
	</objectives>

	<requirements>
		<req>
			Use Eclipse for writing and testing all parts of the exercise.
		</req>
		<req>
			Use the JExercise tool to verify the code.
		</req>
		<req>
			All classes must be defined/stored in package/folder oving9.
		</req>
		<req>
			For classes; use the exact names and modifiers that are specified in the exercise.
		</req>
		<req>
			For methods; use the exact name, parameter datatype, sequence of parameters, and 
			datatype for return value, that are specified.
		</req>
		<req>
			NB! Parameters and fields, and their types, are not always specified. If not, it can 
			be deduced from the text and it is a part of the exercise to figure out what it has 
			to be.
		</req>
	</requirements>

	<reading>
		<book title="Liang">
			<chapter nr="14.2">Abstract Classes</chapter>
			<chapter nr="14.4">Interfaces</chapter>
			<chapter nr="14.8">Interfaces vs. Abstract Classes</chapter>
		</book>
	</reading>
	
	<comment></comment>
</exercise>
